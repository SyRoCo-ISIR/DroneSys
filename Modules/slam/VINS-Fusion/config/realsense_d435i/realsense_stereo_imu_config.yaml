%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "./output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.999897066212435, -0.00819708617404911, 0.0117756001128996, 0.00817569110577449,
          0.00803865704184781, 0.999877380070454, 0.013438929139166, 0.0146628138082525,
          -0.0118843162498841, -0.0133428858085193, 0.999840352469119, 0.013291852838137,
          0.0, 0.0, 0.0, 1.0]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.999936140907362, -0.00869110791348557, 0.00722348603709269, 0.0603200519102798,
          0.00858867997063305, 0.999863816836024, 0.0140919252927991, 0.0152398517897658,
          -0.00734497676333772, -0.0140289851853915, 0.999874611584379, 0.0120027600385779,
          0.0, 0.0, 0.0, 1.0]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance (pixel) between two features 
#freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.01  # max solver itration time (s), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.5          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.08         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.008         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0005       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "./output/pose_graph" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
skip_cnt: 0                    # creat a keyframe for every skip_cnt
skip_dis: 1.0                    # creat a keyframe if translation is greater then skip_dis
